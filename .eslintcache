[{"D:\\projects\\dashboard\\src\\index.js":"1","D:\\projects\\dashboard\\src\\App.js":"2","D:\\projects\\dashboard\\src\\components\\header\\index.jsx":"3","D:\\projects\\dashboard\\src\\components\\header\\style.js":"4","D:\\projects\\dashboard\\src\\styles.js":"5","D:\\projects\\dashboard\\src\\components\\sidebar\\index.jsx":"6","D:\\projects\\dashboard\\src\\components\\sidebar\\style.js":"7","D:\\projects\\dashboard\\src\\components\\sidebar\\const.js":"8","D:\\projects\\dashboard\\src\\components\\users\\index.jsx":"9","D:\\projects\\dashboard\\src\\components\\users\\usersHeader\\index.jsx":"10","D:\\projects\\dashboard\\src\\components\\users\\usersTable\\index.jsx":"11","D:\\projects\\dashboard\\src\\components\\users\\usersHeader\\iconFilter.jsx":"12","D:\\projects\\dashboard\\src\\components\\users\\style.js":"13","D:\\projects\\dashboard\\src\\components\\users\\usersHeader\\style.js":"14","D:\\projects\\dashboard\\src\\components\\users\\usersTable\\style.js":"15","D:\\projects\\dashboard\\src\\components\\users\\usersTable\\const.js":"16","D:\\projects\\dashboard\\src\\components\\users\\usersTable\\tableHeader.jsx":"17","D:\\projects\\dashboard\\src\\components\\users\\usersHeader\\popUp\\index.jsx":"18","D:\\projects\\dashboard\\src\\components\\users\\usersHeader\\popUp\\style.js":"19","D:\\projects\\dashboard\\src\\components\\products\\index.jsx":"20","D:\\projects\\dashboard\\src\\components\\products\\productsHeader\\index.jsx":"21","D:\\projects\\dashboard\\src\\components\\products\\productsHeader\\style.js":"22","D:\\projects\\dashboard\\src\\components\\products\\productsSearch\\index.jsx":"23","D:\\projects\\dashboard\\src\\redux\\store.js":"24","D:\\projects\\dashboard\\src\\redux\\reducers\\index.js":"25","D:\\projects\\dashboard\\src\\redux\\reducers\\users.js":"26","D:\\projects\\dashboard\\src\\redux\\actions\\users.js":"27","D:\\projects\\dashboard\\src\\redux\\reducers\\products.js":"28","D:\\projects\\dashboard\\src\\redux\\actions\\products.js":"29"},{"size":659,"mtime":1611152382945,"results":"30","hashOfConfig":"31"},{"size":1616,"mtime":1611157741269,"results":"32","hashOfConfig":"31"},{"size":1110,"mtime":1610791296185,"results":"33","hashOfConfig":"31"},{"size":498,"mtime":1610791188389,"results":"34","hashOfConfig":"31"},{"size":351,"mtime":1610871470654,"results":"35","hashOfConfig":"31"},{"size":2047,"mtime":1611046562338,"results":"36","hashOfConfig":"31"},{"size":1426,"mtime":1611046557052,"results":"37","hashOfConfig":"31"},{"size":922,"mtime":1610953022185,"results":"38","hashOfConfig":"31"},{"size":908,"mtime":1611156888161,"results":"39","hashOfConfig":"31"},{"size":2010,"mtime":1611154071551,"results":"40","hashOfConfig":"31"},{"size":6174,"mtime":1611154582364,"results":"41","hashOfConfig":"31"},{"size":599,"mtime":1610789905469,"results":"42","hashOfConfig":"31"},{"size":206,"mtime":1610953567723,"results":"43","hashOfConfig":"31"},{"size":375,"mtime":1610873737242,"results":"44","hashOfConfig":"31"},{"size":610,"mtime":1610875853609,"results":"45","hashOfConfig":"31"},{"size":544,"mtime":1611124630990,"results":"46","hashOfConfig":"31"},{"size":2465,"mtime":1610901374522,"results":"47","hashOfConfig":"31"},{"size":4008,"mtime":1611156550664,"results":"48","hashOfConfig":"31"},{"size":1066,"mtime":1610906046791,"results":"49","hashOfConfig":"31"},{"size":259,"mtime":1610981347286,"results":"50","hashOfConfig":"31"},{"size":1170,"mtime":1610981637242,"results":"51","hashOfConfig":"31"},{"size":1150,"mtime":1610981663243,"results":"52","hashOfConfig":"31"},{"size":1329,"mtime":1611126326450,"results":"53","hashOfConfig":"31"},{"size":351,"mtime":1611152342610,"results":"54","hashOfConfig":"31"},{"size":219,"mtime":1611157277384,"results":"55","hashOfConfig":"31"},{"size":472,"mtime":1611156703627,"results":"56","hashOfConfig":"31"},{"size":307,"mtime":1611153837759,"results":"57","hashOfConfig":"31"},{"size":430,"mtime":1611157252474,"results":"58","hashOfConfig":"31"},{"size":132,"mtime":1611157175902,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1mj5fkk",{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\projects\\dashboard\\src\\index.js",["123"],"D:\\projects\\dashboard\\src\\App.js",["124","125"],"D:\\projects\\dashboard\\src\\components\\header\\index.jsx",[],["126","127"],"D:\\projects\\dashboard\\src\\components\\header\\style.js",[],"D:\\projects\\dashboard\\src\\styles.js",[],"D:\\projects\\dashboard\\src\\components\\sidebar\\index.jsx",["128"],"import React from 'react'\r\nimport {\r\n  Drawer,\r\n  Paper,\r\n  Typography,\r\n  ListItem,\r\n  List,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Divider,\r\n  Button,\r\n  Grid,\r\n} from '@material-ui/core'\r\nimport ContactSupportOutlinedIcon from '@material-ui/icons/ContactSupportOutlined'\r\nimport avatar from '../../assets/navSidebar/profileImg.png'\r\nimport useStyles from './style'\r\nimport { sidebarItems } from './const'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SidebarNav = () => {\r\n  const classes = useStyles()\r\n  return (\r\n    <Drawer\r\n      className={classes.sidebar}\r\n      variant=\"permanent\"\r\n      anchor=\"left\"\r\n      classes={{\r\n        paper: classes.root,\r\n      }}\r\n    >\r\n      <Paper elevation={0} className={classes.avatar}>\r\n        <img src={avatar} alt=\"\" />\r\n        <Typography variant=\"h5\" className={classes.name}>\r\n          Roman Kutepov\r\n        </Typography>\r\n        <Typography variant=\"span\" className={classes.profession}>\r\n          Brain Director\r\n        </Typography>\r\n      </Paper>\r\n      <Divider variant=\"middle\" />\r\n      <List className={classes.list}>\r\n        {sidebarItems.map((item, index) => (\r\n          <ListItem\r\n            classes={{ gutters: classes.listItem }}\r\n            component=\"li\"\r\n            button\r\n            key={item.text}\r\n            className={classes.listItem}\r\n          >\r\n            <NavLink\r\n              to={item.link}\r\n              className={classes.link}\r\n              activeClassName={classes.activeLink}\r\n            >\r\n              <ListItemIcon>{item.icon}</ListItemIcon>\r\n              <ListItemText primary={item.text} />\r\n            </NavLink>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider variant=\"middle\" />\r\n      <Typography variant=\"span\" className={classes.span}>\r\n        Support\r\n      </Typography>\r\n      <Button\r\n        startIcon={<ContactSupportOutlinedIcon />}\r\n        classes={{\r\n          label: classes.btn,\r\n        }}\r\n      >\r\n        Support\r\n      </Button>\r\n    </Drawer>\r\n  )\r\n}\r\n\r\nexport default SidebarNav\r\n","D:\\projects\\dashboard\\src\\components\\sidebar\\style.js",[],"D:\\projects\\dashboard\\src\\components\\sidebar\\const.js",[],"D:\\projects\\dashboard\\src\\components\\users\\index.jsx",["129","130"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport UsersHeader from './usersHeader'\r\nimport UsersTable from './usersTable'\r\nimport useStyles from './style'\r\n\r\nconst Users = ({state}) => {\r\n  const classes = useStyles()\r\n  const [searchValue, setSearchValue] = React.useState('')\r\n  return (\r\n    <div className={classes.root}>\r\n      <UsersHeader\r\n        state={state}\r\n        setSearchValue={setSearchValue}\r\n      />\r\n      <UsersTable\r\n        usersData={state.filter((item) => {\r\n          if (searchValue === '') {\r\n            return item\r\n          } else if (\r\n            item.name.toLowerCase().includes(searchValue.toLowerCase())\r\n          ) {\r\n            return item\r\n          } else if (\r\n            item.id.toLowerCase().includes(searchValue.toLowerCase())\r\n          ) {\r\n            return item\r\n          }\r\n        })}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Users\r\n","D:\\projects\\dashboard\\src\\components\\users\\usersHeader\\index.jsx",[],"D:\\projects\\dashboard\\src\\components\\users\\usersTable\\index.jsx",["131","132"],"import React from 'react'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TablePagination from '@material-ui/core/TablePagination'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport axios from 'axios'\r\nimport useStyles from './style'\r\nimport TableHeader from './tableHeader'\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1\r\n  }\r\n  return 0\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy)\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index])\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0])\r\n    if (order !== 0) return order\r\n    return a[1] - b[1]\r\n  })\r\n  return stabilizedThis.map((el) => el[0])\r\n}\r\n\r\nfunction UsersTable({ usersData }) {\r\n  console.log(usersData)\r\n  const classes = useStyles()\r\n  const [order, setOrder] = React.useState('asc')\r\n  const [orderBy, setOrderBy] = React.useState('calories')\r\n  const [selected, setSelected] = React.useState([])\r\n  const [page, setPage] = React.useState(0)\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10)\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc'\r\n    setOrder(isAsc ? 'desc' : 'asc')\r\n    setOrderBy(property)\r\n  }\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = usersData.map((n) => n.id)\r\n      setSelected(newSelecteds)\r\n      return\r\n    }\r\n    setSelected([])\r\n  }\r\n\r\n  const handleClick = (event, id) => {\r\n    const selectedIndex = selected.indexOf(id)\r\n    let newSelected = []\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id)\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1))\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1))\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      )\r\n    }\r\n\r\n    setSelected(newSelected)\r\n  }\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage)\r\n  }\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10))\r\n    setPage(0)\r\n  }\r\n\r\n  const isSelected = (id) => selected.indexOf(id) !== -1\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <TableHeader\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={usersData.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(usersData, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.id)\r\n                  const labelId = `enhanced-table-checkbox-${index}`\r\n                  return (\r\n                    <TableRow\r\n                      classes={{\r\n                        selected: classes.selected,\r\n                      }}\r\n                      className={classes.row}\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.id)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.id}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          color=\"primary\"\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        padding=\"none\"\r\n                      >\r\n                        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                          <img\r\n                            src={row.img}\r\n                            alt=\"\"\r\n                            style={{ width: '32px', borderRadius: '50%' }}\r\n                          />\r\n                          {row.name}\r\n                        </div>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.id}</TableCell>\r\n                      <TableCell align=\"right\">{row.phoneNumber}</TableCell>\r\n                      <TableCell align=\"right\">{row.emailAddress}</TableCell>\r\n                      <TableCell align=\"right\">{row.date}</TableCell>\r\n                    </TableRow>\r\n                  )\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 20, 30]}\r\n          component=\"div\"\r\n          count={usersData.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UsersTable\r\n","D:\\projects\\dashboard\\src\\components\\users\\usersHeader\\iconFilter.jsx",[],"D:\\projects\\dashboard\\src\\components\\users\\style.js",[],"D:\\projects\\dashboard\\src\\components\\users\\usersHeader\\style.js",[],"D:\\projects\\dashboard\\src\\components\\users\\usersTable\\style.js",[],"D:\\projects\\dashboard\\src\\components\\users\\usersTable\\const.js",[],"D:\\projects\\dashboard\\src\\components\\users\\usersTable\\tableHeader.jsx",[],"D:\\projects\\dashboard\\src\\components\\users\\usersHeader\\popUp\\index.jsx",["133","134"],"import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogActions,\r\n  Button,\r\n  DialogContent,\r\n  Grid,\r\n  DialogContentText,\r\n  TextField,\r\n  Box,\r\n} from '@material-ui/core'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\r\nimport logo from '../../../../assets/logo.svg'\r\nimport useStyles from './style'\r\nimport { inputs } from '../../usersTable/const'\r\nimport {addUserToTable, setUsersDatabase} from '../../../../redux/actions/users'\r\n\r\nconst AddUser = ({ open, setOpen, state }) => {\r\n  const dispatch = useDispatch()\r\n  const classes = useStyles()\r\n  const [newUser, setNewUser] = React.useState({\r\n    name: '',\r\n    img: '',\r\n    id: '',\r\n    phoneNumber: '',\r\n    emailAddress: '',\r\n    date: '',\r\n  })\r\n  const createID = () => {\r\n    return 'DEV' + Math.random().toString(10).substr(2, 9)\r\n  }\r\n  const currentDate = () => {\r\n    const newDate = new Date()\r\n    const date = newDate.getDate()\r\n    const month = newDate.getMonth() + 1\r\n    const year = newDate.getFullYear()\r\n    const separator = '/'\r\n    const result = `${date}${separator}${\r\n      month < 10 ? `0${month}` : `${month}`\r\n    }${separator}${year}`\r\n    return result\r\n  }\r\n  const handleClickcClose = () => {\r\n    setOpen(false)\r\n  }\r\n  const saveData = (event) => {\r\n    setNewUser({\r\n      name: event.target.form[0].value,\r\n      img: event.target.form[6].value,\r\n      id: createID(),\r\n      phoneNumber: event.target.form[4].value,\r\n      emailAddress: event.target.form[2].value,\r\n      date: currentDate(),\r\n    })\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    handleClickcClose()\r\n    event.preventDefault()\r\n    // dispatch(setUsersDatabase(newUser))\r\n    dispatch(addUserToTable([...state, newUser]))\r\n    // setUsersData([...usersData, newUser])\r\n  }\r\n  \r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClickcClose}\r\n      aria-labelledBy=\"form-dialog-title\"\r\n      classes={{ paper: classes.paper, paperWidthSm: classes.paper }}\r\n    >\r\n      <Grid container>\r\n        <Grid item md={6} className={classes.item}>\r\n          <DialogActions\r\n            classes={{\r\n              root: classes.dialogActions,\r\n            }}\r\n          >\r\n            <Button startIcon={<ArrowBackIcon />} onClick={handleClickcClose}>\r\n              Go back\r\n            </Button>\r\n          </DialogActions>\r\n          <DialogTitle\r\n            id=\"form-dialog-title\"\r\n            classes={{ root: classes.dialogTitle }}\r\n          >\r\n            Create a new user\r\n          </DialogTitle>\r\n          <DialogContentText className={classes.dialogContentText}>\r\n            Add main information about user\r\n          </DialogContentText>\r\n          <DialogContent\r\n            classes={{\r\n              root: classes.itemDialogContent,\r\n            }}\r\n          >\r\n            <form action=\"\" onSubmit={(event) => handleSubmit(event)}>\r\n              {inputs.map((item) => {\r\n                return (\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id={item.id}\r\n                    label={item.label}\r\n                    type={item.type}\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    className={classes.textField}\r\n                    onChange={(event) => saveData(event)}\r\n                  />\r\n                )\r\n              })}\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                className={classes.itemBtn}\r\n                onClick={handleSubmit}\r\n              >\r\n                Add NEW USER\r\n              </Button>\r\n            </form>\r\n          </DialogContent>\r\n        </Grid>\r\n        <Grid item md={6} style={{ widht: '480px', height: '100%' }}>\r\n          <Box className={classes.itemBox}>\r\n            <img src={logo} alt=\"\" className={classes.logo} />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default AddUser\r\n","D:\\projects\\dashboard\\src\\components\\users\\usersHeader\\popUp\\style.js",[],"D:\\projects\\dashboard\\src\\components\\products\\index.jsx",[],"D:\\projects\\dashboard\\src\\components\\products\\productsHeader\\index.jsx",[],"D:\\projects\\dashboard\\src\\components\\products\\productsHeader\\style.js",[],"D:\\projects\\dashboard\\src\\components\\products\\productsSearch\\index.jsx",[],"D:\\projects\\dashboard\\src\\redux\\store.js",[],"D:\\projects\\dashboard\\src\\redux\\reducers\\index.js",[],"D:\\projects\\dashboard\\src\\redux\\reducers\\users.js",["135"],"D:\\projects\\dashboard\\src\\redux\\actions\\users.js",[],"D:\\projects\\dashboard\\src\\redux\\reducers\\products.js",["136"],"D:\\projects\\dashboard\\src\\redux\\actions\\products.js",[],{"ruleId":"137","severity":1,"message":"138","line":5,"column":10,"nodeType":"139","messageId":"140","endLine":5,"endColumn":17},{"ruleId":"141","severity":1,"message":"142","line":21,"column":19,"nodeType":"143","endLine":28,"endColumn":4},{"ruleId":"141","severity":1,"message":"144","line":28,"column":6,"nodeType":"145","endLine":28,"endColumn":8,"suggestions":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"137","severity":1,"message":"151","line":12,"column":3,"nodeType":"139","messageId":"140","endLine":12,"endColumn":7},{"ruleId":"137","severity":1,"message":"152","line":2,"column":8,"nodeType":"139","messageId":"140","endLine":2,"endColumn":13},{"ruleId":"153","severity":1,"message":"154","line":17,"column":40,"nodeType":"143","messageId":"155","endLine":17,"endColumn":42},{"ruleId":"137","severity":1,"message":"156","line":6,"column":8,"nodeType":"139","messageId":"140","endLine":6,"endColumn":17},{"ruleId":"137","severity":1,"message":"152","line":11,"column":8,"nodeType":"139","messageId":"140","endLine":11,"endColumn":13},{"ruleId":"137","severity":1,"message":"157","line":18,"column":25,"nodeType":"139","messageId":"140","endLine":18,"endColumn":41},{"ruleId":"158","severity":1,"message":"159","line":71,"column":7,"nodeType":"160","endLine":71,"endColumn":42},{"ruleId":"161","severity":1,"message":"162","line":8,"column":3,"nodeType":"163","messageId":"164","endLine":19,"endColumn":4},{"ruleId":"161","severity":1,"message":"162","line":8,"column":3,"nodeType":"163","messageId":"164","endLine":19,"endColumn":4},"no-unused-vars","'connect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["165"],"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"'Grid' is defined but never used.","'axios' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","'TableHead' is defined but never used.","'setUsersDatabase' is defined but never used.","jsx-a11y/aria-props","aria-labelledBy: This attribute is an invalid ARIA attribute. Did you mean to use aria-labelledby?","JSXAttribute","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",{"desc":"168","fix":"169"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [dispatch]",{"range":"170","text":"171"},[966,968],"[dispatch]"]