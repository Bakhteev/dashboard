[{"D:\\projects\\dashboard\\src\\index.js":"1","D:\\projects\\dashboard\\src\\App.js":"2","D:\\projects\\dashboard\\src\\components\\header\\index.jsx":"3","D:\\projects\\dashboard\\src\\components\\header\\style.js":"4","D:\\projects\\dashboard\\src\\styles.js":"5","D:\\projects\\dashboard\\src\\components\\sidebar\\index.jsx":"6","D:\\projects\\dashboard\\src\\components\\sidebar\\style.js":"7","D:\\projects\\dashboard\\src\\components\\sidebar\\const.js":"8","D:\\projects\\dashboard\\src\\components\\users\\index.jsx":"9","D:\\projects\\dashboard\\src\\components\\users\\usersHeader\\index.jsx":"10","D:\\projects\\dashboard\\src\\components\\users\\usersTable\\index.jsx":"11","D:\\projects\\dashboard\\src\\components\\users\\usersHeader\\iconFilter.jsx":"12","D:\\projects\\dashboard\\src\\components\\users\\style.js":"13","D:\\projects\\dashboard\\src\\components\\users\\usersHeader\\style.js":"14","D:\\projects\\dashboard\\src\\components\\users\\usersTable\\style.js":"15","D:\\projects\\dashboard\\src\\components\\users\\usersTable\\const.js":"16","D:\\projects\\dashboard\\src\\components\\users\\usersTable\\tableHeader.jsx":"17","D:\\projects\\dashboard\\src\\components\\users\\usersHeader\\popUp\\index.jsx":"18","D:\\projects\\dashboard\\src\\components\\users\\usersHeader\\popUp\\style.js":"19","D:\\projects\\dashboard\\src\\components\\products\\index.jsx":"20","D:\\projects\\dashboard\\src\\components\\products\\productsHeader\\index.jsx":"21","D:\\projects\\dashboard\\src\\components\\products\\productsHeader\\style.js":"22","D:\\projects\\dashboard\\src\\components\\products\\productsSearch\\index.jsx":"23","D:\\projects\\dashboard\\src\\redux\\store.js":"24","D:\\projects\\dashboard\\src\\redux\\reducers\\index.js":"25","D:\\projects\\dashboard\\src\\redux\\reducers\\users.js":"26","D:\\projects\\dashboard\\src\\redux\\actions\\users.js":"27","D:\\projects\\dashboard\\src\\redux\\reducers\\products.js":"28","D:\\projects\\dashboard\\src\\redux\\actions\\products.js":"29","D:\\projects\\dashboard\\src\\components\\products\\productsCard\\index.jsx":"30","D:\\projects\\dashboard\\src\\components\\loader\\index.jsx":"31","D:\\projects\\dashboard\\src\\components\\products\\productsSearch\\style.js":"32","D:\\projects\\dashboard\\src\\components\\products\\productsCard\\style.js":"33","D:\\projects\\dashboard\\src\\components\\products\\productsSearch\\popUP\\index.jsx":"34","D:\\projects\\dashboard\\src\\components\\products\\productsSearch\\popUP\\style.js":"35","D:\\projects\\dashboard\\src\\components\\products\\productsSearch\\popUP\\const.js":"36","D:\\projects\\dashboard\\src\\components\\signUp\\index.jsx":"37","D:\\projects\\dashboard\\src\\components\\signUp\\const.js":"38","D:\\projects\\dashboard\\src\\firebase.js":"39","D:\\projects\\dashboard\\src\\context\\authContext.js":"40","D:\\projects\\dashboard\\src\\components\\PrivateRoute.js":"41","D:\\projects\\dashboard\\src\\components\\login\\index.jsx":"42","D:\\projects\\dashboard\\src\\components\\login\\const.js":"43","D:\\projects\\dashboard\\src\\redux\\reducers\\notification.js":"44","D:\\projects\\dashboard\\src\\redux\\actions\\notification.js":"45","D:\\projects\\dashboard\\src\\components\\header\\notificationPopUp\\index.jsx":"46"},{"size":731,"mtime":1612180411151,"results":"47","hashOfConfig":"48"},{"size":1632,"mtime":1612188651299,"results":"49","hashOfConfig":"48"},{"size":3398,"mtime":1612368429014,"results":"50","hashOfConfig":"48"},{"size":498,"mtime":1610791188389,"results":"51","hashOfConfig":"48"},{"size":782,"mtime":1612359111236,"results":"52","hashOfConfig":"48"},{"size":2051,"mtime":1612174314937,"results":"53","hashOfConfig":"48"},{"size":1426,"mtime":1611046557052,"results":"54","hashOfConfig":"48"},{"size":922,"mtime":1612184866349,"results":"55","hashOfConfig":"48"},{"size":2065,"mtime":1612354214923,"results":"56","hashOfConfig":"48"},{"size":2070,"mtime":1612354249787,"results":"57","hashOfConfig":"48"},{"size":6054,"mtime":1611499423753,"results":"58","hashOfConfig":"48"},{"size":599,"mtime":1610789905469,"results":"59","hashOfConfig":"48"},{"size":206,"mtime":1610953567723,"results":"60","hashOfConfig":"48"},{"size":375,"mtime":1610873737242,"results":"61","hashOfConfig":"48"},{"size":676,"mtime":1611471464561,"results":"62","hashOfConfig":"48"},{"size":544,"mtime":1611471276182,"results":"63","hashOfConfig":"48"},{"size":2465,"mtime":1610901374522,"results":"64","hashOfConfig":"48"},{"size":4465,"mtime":1612354305824,"results":"65","hashOfConfig":"48"},{"size":1132,"mtime":1611472595090,"results":"66","hashOfConfig":"48"},{"size":2979,"mtime":1612353718190,"results":"67","hashOfConfig":"48"},{"size":1158,"mtime":1612354102179,"results":"68","hashOfConfig":"48"},{"size":1150,"mtime":1610981663243,"results":"69","hashOfConfig":"48"},{"size":1675,"mtime":1612353749039,"results":"70","hashOfConfig":"48"},{"size":353,"mtime":1612357085879,"results":"71","hashOfConfig":"48"},{"size":281,"mtime":1612248073319,"results":"72","hashOfConfig":"48"},{"size":492,"mtime":1611582485072,"results":"73","hashOfConfig":"48"},{"size":307,"mtime":1611582492355,"results":"74","hashOfConfig":"48"},{"size":587,"mtime":1611581799239,"results":"75","hashOfConfig":"48"},{"size":248,"mtime":1611495215638,"results":"76","hashOfConfig":"48"},{"size":2259,"mtime":1612247218398,"results":"77","hashOfConfig":"48"},{"size":540,"mtime":1611581610305,"results":"78","hashOfConfig":"48"},{"size":645,"mtime":1611471673530,"results":"79","hashOfConfig":"48"},{"size":1086,"mtime":1611472176461,"results":"80","hashOfConfig":"48"},{"size":4182,"mtime":1612357270207,"results":"81","hashOfConfig":"48"},{"size":1132,"mtime":1611474724471,"results":"82","hashOfConfig":"48"},{"size":205,"mtime":1611474932441,"results":"83","hashOfConfig":"48"},{"size":7415,"mtime":1612188493050,"results":"84","hashOfConfig":"48"},{"size":471,"mtime":1612180034428,"results":"85","hashOfConfig":"48"},{"size":505,"mtime":1612180552815,"results":"86","hashOfConfig":"48"},{"size":1366,"mtime":1612181466744,"results":"87","hashOfConfig":"48"},{"size":434,"mtime":1612183654284,"results":"88","hashOfConfig":"48"},{"size":5975,"mtime":1612246704382,"results":"89","hashOfConfig":"48"},{"size":235,"mtime":1612180671879,"results":"90","hashOfConfig":"48"},{"size":586,"mtime":1612355685464,"results":"91","hashOfConfig":"48"},{"size":282,"mtime":1612354463124,"results":"92","hashOfConfig":"48"},{"size":2510,"mtime":1612371330183,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"1mj5fkk",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"96"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"96"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"96"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"96"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"96"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"96"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"96"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"96"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"96"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"96"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\projects\\dashboard\\src\\index.js",[],["197","198"],"D:\\projects\\dashboard\\src\\App.js",[],"D:\\projects\\dashboard\\src\\components\\header\\index.jsx",[],"D:\\projects\\dashboard\\src\\components\\header\\style.js",[],"D:\\projects\\dashboard\\src\\styles.js",[],"D:\\projects\\dashboard\\src\\components\\sidebar\\index.jsx",["199"],"import React from 'react'\r\nimport {\r\n  Drawer,\r\n  Paper,\r\n  Typography,\r\n  ListItem,\r\n  List,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Divider,\r\n  Button,\r\n  Grid,\r\n} from '@material-ui/core'\r\nimport ContactSupportOutlinedIcon from '@material-ui/icons/ContactSupportOutlined'\r\nimport avatar from '../../assets/navSidebar/profileImg.png'\r\nimport useStyles from './style'\r\nimport { sidebarItems } from './const'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SidebarNav = () => {\r\n  const classes = useStyles()\r\n  return (\r\n    <Drawer\r\n      className={classes.sidebar}\r\n      variant=\"permanent\"\r\n      anchor=\"left\"\r\n      classes={{\r\n        paper: classes.root,\r\n      }}\r\n    >\r\n      <Paper elevation={0} className={classes.avatar}>\r\n        <img src={avatar} alt=\"\" />\r\n        <Typography variant=\"h5\" className={classes.name}>\r\n          Roman Kutepov\r\n        </Typography>\r\n        <Typography component='span' className={classes.profession}>\r\n          Brain Director\r\n        </Typography>\r\n      </Paper>\r\n      <Divider variant=\"middle\" />\r\n      <List className={classes.list}>\r\n        {sidebarItems.map((item, index) => (\r\n          <ListItem\r\n            classes={{ gutters: classes.listItem }}\r\n            component=\"li\"\r\n            button\r\n            key={item.text}\r\n            className={classes.listItem}\r\n          >\r\n            <NavLink\r\n              to={item.link}\r\n              className={classes.link}\r\n              activeClassName={classes.activeLink}\r\n            >\r\n              <ListItemIcon>{item.icon}</ListItemIcon>\r\n              <ListItemText primary={item.text} />\r\n            </NavLink>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider variant=\"middle\" />\r\n      <Typography component='span' className={classes.span}>\r\n        Support\r\n      </Typography>\r\n      <Button\r\n        startIcon={<ContactSupportOutlinedIcon />}\r\n        classes={{\r\n          label: classes.btn,\r\n        }}\r\n      >\r\n        Support\r\n      </Button>\r\n    </Drawer>\r\n  )\r\n}\r\n\r\nexport default SidebarNav\r\n","D:\\projects\\dashboard\\src\\components\\sidebar\\style.js",[],"D:\\projects\\dashboard\\src\\components\\sidebar\\const.js",[],"D:\\projects\\dashboard\\src\\components\\users\\index.jsx",["200","201","202"],"import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport axios from 'axios'\r\nimport UsersHeader from './usersHeader'\r\nimport UsersTable from './usersTable'\r\nimport useStyles from './style'\r\nimport {\r\n  setUsersDatabase,\r\n  showLoader,\r\n  hideLoader,\r\n} from '../../redux/actions/users'\r\nimport Loader from '../loader'\r\n\r\nconst url = 'https://dasboard-deae2-default-rtdb.firebaseio.com/'\r\n\r\nconst Users = () => {\r\n  const classes = useStyles()\r\n  const [searchValue, setSearchValue] = React.useState('')\r\n  const dispatch = useDispatch()\r\n  const state = useSelector(({ usersDatabase, notifications }) => {\r\n    return {\r\n      items: usersDatabase.items,\r\n      loading: usersDatabase.loading,\r\n      notifications: notifications.notifications,\r\n    }\r\n  })\r\n\r\n  const ShowLoader = () => {\r\n    dispatch(showLoader())\r\n  }\r\n\r\n  const fetch = async () => {\r\n    ShowLoader()\r\n\r\n    const res = await axios.get(`${url}/users.json`)\r\n\r\n    if (!res.data) {\r\n      return (res.data = {})\r\n    } else {\r\n      const payload = Object.keys(res.data).map((key) => {\r\n        return {\r\n          ...res.data[key],\r\n          id: key,\r\n        }\r\n      })\r\n      dispatch(setUsersDatabase(payload))\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    fetch()\r\n  }, [])\r\n  return (\r\n    <div className={classes.root}>\r\n      <UsersHeader\r\n        state={state.items}\r\n        notifications={state.notifications}\r\n        setSearchValue={setSearchValue}\r\n      />\r\n      {state.loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <UsersTable\r\n          usersData={state.items.filter((item) => {\r\n            if (searchValue === '') {\r\n              return item\r\n            } else if (\r\n              item.name.toLowerCase().includes(searchValue.toLowerCase())\r\n            ) {\r\n              return item\r\n            } else if (\r\n              item.userId.toLowerCase().includes(searchValue.toLowerCase())\r\n            ) {\r\n              return item\r\n            }\r\n          })}\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Users\r\n","D:\\projects\\dashboard\\src\\components\\users\\usersHeader\\index.jsx",[],"D:\\projects\\dashboard\\src\\components\\users\\usersTable\\index.jsx",[],"D:\\projects\\dashboard\\src\\components\\users\\usersHeader\\iconFilter.jsx",[],"D:\\projects\\dashboard\\src\\components\\users\\style.js",[],"D:\\projects\\dashboard\\src\\components\\users\\usersHeader\\style.js",[],"D:\\projects\\dashboard\\src\\components\\users\\usersTable\\style.js",[],"D:\\projects\\dashboard\\src\\components\\users\\usersTable\\const.js",[],"D:\\projects\\dashboard\\src\\components\\users\\usersTable\\tableHeader.jsx",[],"D:\\projects\\dashboard\\src\\components\\users\\usersHeader\\popUp\\index.jsx",["203"],"import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport axios from 'axios'\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogActions,\r\n  Button,\r\n  DialogContent,\r\n  Grid,\r\n  DialogContentText,\r\n  TextField,\r\n  Box,\r\n} from '@material-ui/core'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\r\nimport logo from '../../../../assets/logo.svg'\r\nimport useStyles from './style'\r\nimport { inputs } from '../../usersTable/const'\r\nimport { setUsersDatabase } from '../../../../redux/actions/users'\r\nimport { addNotification } from \"../../../../redux/actions/notification\";\r\n\r\nconst url = 'https://dasboard-deae2-default-rtdb.firebaseio.com'\r\n\r\nconst AddUser = ({ open, setOpen, state, notifications }) => {\r\n  const dispatch = useDispatch()\r\n  const classes = useStyles()\r\n\r\n  const addNote = async (newUser) => {\r\n    const user = newUser\r\n    try {\r\n      const res = await axios.post(`${url}/users.json`, user)\r\n      const payload = {\r\n        ...user,\r\n        id: res.data.name,\r\n      }\r\n      dispatch(setUsersDatabase([...state, payload]))\r\n      dispatch(addNotification([...notifications, payload]))\r\n    } catch (e) {\r\n      throw new Error(e.message)\r\n    }\r\n  }\r\n\r\n  const [newUser, setNewUser] = React.useState({\r\n    name: '',\r\n    img: '',\r\n    userId: '',\r\n    phoneNumber: '',\r\n    emailAddress: '',\r\n    date: '',\r\n  })\r\n\r\n  const createID = () => {\r\n    return 'DEV' + Math.random().toString(10).substr(2, 9)\r\n  }\r\n\r\n  const currentDate = () => {\r\n    const newDate = new Date()\r\n    const date = newDate.getDate()\r\n    const month = newDate.getMonth() + 1\r\n    const year = newDate.getFullYear()\r\n    const separator = '/'\r\n    const result = `${date}${separator}${\r\n      month < 10 ? `0${month}` : `${month}`\r\n    }${separator}${year}`\r\n    return result\r\n  }\r\n\r\n  const handleClickcClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  const saveData = (event) => {\r\n    setNewUser({\r\n      name: event.target.form[0].value,\r\n      img: event.target.form[6].value,\r\n      userId: createID(),\r\n      phoneNumber: event.target.form[4].value,\r\n      emailAddress: event.target.form[2].value,\r\n      date: currentDate(),\r\n    })\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    handleClickcClose()\r\n    event.preventDefault()\r\n    addNote(newUser)\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClickcClose}\r\n      aria-labelledBy=\"form-dialog-title\"\r\n      classes={{ paper: classes.paper, paperWidthSm: classes.paper }}\r\n    >\r\n      <Grid container>\r\n        <Grid item md={6} className={classes.item}>\r\n          <DialogActions\r\n            classes={{\r\n              root: classes.dialogActions,\r\n            }}\r\n          >\r\n            <Button startIcon={<ArrowBackIcon />} onClick={handleClickcClose}>\r\n              Go back\r\n            </Button>\r\n          </DialogActions>\r\n          <DialogTitle\r\n            id=\"form-dialog-title\"\r\n            classes={{ root: classes.dialogTitle }}\r\n          >\r\n            Create a new user\r\n          </DialogTitle>\r\n          <DialogContentText className={classes.dialogContentText}>\r\n            Add main information about user\r\n          </DialogContentText>\r\n          <DialogContent\r\n            classes={{\r\n              root: classes.itemDialogContent,\r\n            }}\r\n          >\r\n            <form action=\"post\">\r\n              {inputs.map((item) => {\r\n                return (\r\n                  <TextField\r\n                    key={item.id}\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id={item.id}\r\n                    label={item.label}\r\n                    type={item.type}\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    className={classes.textField}\r\n                    onChange={(event) => saveData(event)}\r\n                  />\r\n                )\r\n              })}\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                className={classes.itemBtn}\r\n                onClick={handleSubmit}\r\n              >\r\n                Add NEW USER\r\n              </Button>\r\n            </form>\r\n          </DialogContent>\r\n        </Grid>\r\n        <Grid item md={6} className={classes.popUpRight}>\r\n          <Box className={classes.itemBox}>\r\n            <img src={logo} alt=\"\" className={classes.logo} />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default AddUser\r\n","D:\\projects\\dashboard\\src\\components\\users\\usersHeader\\popUp\\style.js",[],"D:\\projects\\dashboard\\src\\components\\products\\index.jsx",["204","205"],"import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport axios from 'axios'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Grid } from '@material-ui/core'\r\nimport ProductsCard from './productsCard'\r\nimport ProductsHeader from './productsHeader'\r\nimport ProductsSearch from './productsSearch'\r\nimport { setProducts } from '../../redux/actions/products'\r\nimport { showLoader } from '../../redux/actions/users'\r\nimport Loader from '../loader'\r\n\r\nconst url = 'https://dasboard-deae2-default-rtdb.firebaseio.com'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    margin: '0 -16px',\r\n  },\r\n  card: {\r\n    width: '33.33%',\r\n    '@media screen and (max-width: 1600px)': {\r\n      width: '50%',\r\n    },\r\n    '@media screen and (max-width: 1090px)': {\r\n      width: '100%',\r\n    },\r\n  },\r\n}))\r\n\r\nconst Products = () => {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n  const [searchValue, setSearchValue] = React.useState('')\r\n  const state = useSelector(({ products, notifications}) => {\r\n    return {\r\n      items: products.items,\r\n      loading: products.loading,\r\n      notifications: notifications.notifications,\r\n    }\r\n  })\r\n\r\n  const ShowLoader = () =>{dispatch(showLoader())}\r\n\r\n  const fetch = async () => {\r\n    ShowLoader()\r\n\r\n    const res = await axios.get(`${url}/products.json`)\r\n\r\n    if (!res.data) {\r\n      return (res.data = {})\r\n    } else {\r\n      const payload = Object.keys(res.data).map((key) => {\r\n        return {\r\n          ...res.data[key],\r\n          id: key,\r\n        }\r\n      })\r\n      dispatch(setProducts(payload))\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    fetch()\r\n  }, [])\r\n  return (\r\n    <>\r\n      <ProductsHeader />\r\n      <ProductsSearch\r\n        products={state.items}\r\n        notifications={state.notifications}\r\n        value={state.value}\r\n        setSearchValue={setSearchValue}\r\n      />\r\n      <Grid container className={classes.container}>\r\n        {state.loading ? (\r\n          <Grid item xs={12}>\r\n            <Loader />\r\n          </Grid>\r\n        ) : (\r\n          state.items\r\n            .filter((item) => {\r\n              if (searchValue === '') {\r\n                return item\r\n              } else if (\r\n                item.productname\r\n                  .toLowerCase()\r\n                  .includes(searchValue.toLowerCase())\r\n              ) {\r\n                return item\r\n              }\r\n            })\r\n            .map((item) => {\r\n              return (\r\n                <Grid\r\n                  className={classes.card}\r\n                  item\r\n                  style={{\r\n                    padding: '0 16px',\r\n                    boxSizing: 'border-box',\r\n                    marginBottom: 24,\r\n                  }}\r\n                >\r\n                  <ProductsCard {...item} fetchNotes={fetch} />\r\n                </Grid>\r\n              )\r\n            })\r\n        )}\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Products\r\n","D:\\projects\\dashboard\\src\\components\\products\\productsHeader\\index.jsx",[],"D:\\projects\\dashboard\\src\\components\\products\\productsHeader\\style.js",[],"D:\\projects\\dashboard\\src\\components\\products\\productsSearch\\index.jsx",[],"D:\\projects\\dashboard\\src\\redux\\store.js",[],"D:\\projects\\dashboard\\src\\redux\\reducers\\index.js",[],"D:\\projects\\dashboard\\src\\redux\\reducers\\users.js",["206"],"import { SET_USERS_DATABASE, SHOW_LOADER, } from '../actions/users'\r\nconst initialState = {\r\n  items: [],\r\n  loading: false\r\n}\r\n\r\nconst usersDatabase = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USERS_DATABASE:\r\n      return {\r\n        ...state,\r\n        items: action.payload,\r\n        loading: false\r\n      }\r\n    case SHOW_LOADER:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      }\r\n  }\r\n  return state\r\n}\r\n\r\nexport default usersDatabase\r\n","D:\\projects\\dashboard\\src\\redux\\actions\\users.js",[],"D:\\projects\\dashboard\\src\\redux\\reducers\\products.js",["207"],"import { SET_PRODUCTS, INCREMENT } from '../actions/products'\r\nimport { SHOW_LOADER } from '../actions/users'\r\n\r\nconst initialState = {\r\n  items: [],\r\n  loading: false,\r\n}\r\n\r\nconst products = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        items: action.payload,\r\n        loading: false,\r\n      }\r\n    case INCREMENT:\r\n      return {\r\n        ...state,\r\n      }\r\n    case SHOW_LOADER:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      }\r\n  }\r\n  return state\r\n}\r\n\r\nexport default products\r\n","D:\\projects\\dashboard\\src\\redux\\actions\\products.js",[],"D:\\projects\\dashboard\\src\\components\\products\\productsCard\\index.jsx",["208"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  IconButton,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport AccessTimeOutlinedIcon from '@material-ui/icons/AccessTimeOutlined'\r\nimport GetAppIcon from '@material-ui/icons/GetApp'\r\nimport { counter, setProducts } from '../../../redux/actions/products'\r\nimport { useDispatch } from 'react-redux'\r\nimport useStyles from './style'\r\n\r\nconst url = 'https://dasboard-deae2-default-rtdb.firebaseio.com'\r\n\r\nconst ProductsCard = ({\r\n  id,\r\n  productLogo,\r\n  productname,\r\n  productDescription,\r\n  updatedTime,\r\n  downloads,\r\n  fetchNotes,\r\n}) => {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n\r\n  const Counter = async (id) => {\r\n    const counterValue = { downloads: downloads + 1 }\r\n    try {\r\n      const res = await axios.patch(`${url}/products/${id}.json`, counterValue)\r\n      const payload = {\r\n        ...res.data,\r\n        downloads: res.data.downloads,\r\n      }\r\n      dispatch(counter(payload))\r\n      fetchNotes()\r\n    } catch (e) {\r\n      throw new Error(e.message)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent className={classes.cardContent}>\r\n        <img src={productLogo} alt={productname} className={classes.icon} />\r\n        <Typography variant=\"h3\" className={classes.title}>\r\n          {productname}\r\n        </Typography>\r\n        <Typography variant=\"p\" className={classes.description}>\r\n          {productDescription}\r\n        </Typography>\r\n        <Box className={classes.row}>\r\n          <Box className={classes.rowLeft}>\r\n            <AccessTimeOutlinedIcon />\r\n            <Typography variant=\"span\" className={classes.date}>\r\n              {updatedTime}\r\n            </Typography>\r\n          </Box>\r\n          <CardActions classes={{ root: classes.root }}>\r\n            <IconButton\r\n              classes={{ root: classes.btn }}\r\n              onClick={() => Counter(id)}\r\n            >\r\n              <GetAppIcon />\r\n            </IconButton>\r\n            <Typography variant=\"span\" className={classes.downloads}>\r\n              {downloads}\r\n            </Typography>\r\n          </CardActions>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default ProductsCard\r\n","D:\\projects\\dashboard\\src\\components\\loader\\index.jsx",[],"D:\\projects\\dashboard\\src\\components\\products\\productsSearch\\style.js",[],"D:\\projects\\dashboard\\src\\components\\products\\productsCard\\style.js",[],"D:\\projects\\dashboard\\src\\components\\products\\productsSearch\\popUP\\index.jsx",["209"],"import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport axios from 'axios'\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogActions,\r\n  Button,\r\n  DialogContent,\r\n  Grid,\r\n  DialogContentText,\r\n  TextField,\r\n  Box,\r\n} from '@material-ui/core'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\r\nimport logo from '../../../../assets/logo.svg'\r\nimport useStyles from './style'\r\nimport { inputs } from './const'\r\nimport { setProducts } from '../../../../redux/actions/products'\r\nimport { addNotification } from '../../../../redux/actions/notification'\r\n\r\nconst url = 'https://dasboard-deae2-default-rtdb.firebaseio.com'\r\n\r\nconst AddProduct = ({ open, setOpen, products, notifications }) => {\r\n  const dispatch = useDispatch()\r\n  const classes = useStyles()\r\n  const [newProduct, setNewProduct] = React.useState({\r\n    productLogo: '',\r\n    productname: '',\r\n    productDescription: '',\r\n    updatedTime: '',\r\n    downloads: 0,\r\n  })\r\n\r\n  const handleClickcClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  const addProduct = async (newProduct) => {\r\n    const product = newProduct\r\n    try {\r\n      const res = await axios.post(`${url}/products.json`, product)\r\n      const payload = {\r\n        ...product,\r\n        id: res.data.name,\r\n      }\r\n      dispatch(setProducts([...products, payload]))\r\n      dispatch(addNotification([...notifications, payload]))\r\n    } catch (e) {\r\n      throw new Error(e.message)\r\n    }\r\n  }\r\n\r\n  const currentDate = () => {\r\n    const date = new Date().toUTCString().split('')\r\n    const GMT = date.splice(-4, 4)\r\n    const newDate = date.join('')\r\n    return newDate\r\n  }\r\n\r\n  const saveData = (event) => {\r\n    setNewProduct({\r\n      productLogo: event.target.form[0].value,\r\n      productname: event.target.form[2].value,\r\n      productDescription: event.target.form[4].value,\r\n      updatedTime: currentDate(),\r\n      downloads: 0,\r\n    })\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    handleClickcClose()\r\n    event.preventDefault()\r\n    addProduct(newProduct)\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClickcClose}\r\n      aria-labelledby=\"form-dialog-title\"\r\n      classes={{ paper: classes.paper, paperWidthSm: classes.paper }}\r\n    >\r\n      <Grid container>\r\n        <Grid item md={6} className={classes.item}>\r\n          <DialogActions\r\n            classes={{\r\n              root: classes.dialogActions,\r\n            }}\r\n          >\r\n            <Button startIcon={<ArrowBackIcon />} onClick={handleClickcClose}>\r\n              Go back\r\n            </Button>\r\n          </DialogActions>\r\n          <DialogTitle\r\n            id=\"form-dialog-title\"\r\n            classes={{ root: classes.dialogTitle }}\r\n          >\r\n            Create a new product\r\n          </DialogTitle>\r\n          <DialogContentText className={classes.dialogContentText}>\r\n            Add main information about product\r\n          </DialogContentText>\r\n          <DialogContent\r\n            classes={{\r\n              root: classes.itemDialogContent,\r\n            }}\r\n          >\r\n            <form action=\"post\">\r\n              {inputs.map((item) => {\r\n                return (\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id={item.id}\r\n                    label={item.label}\r\n                    type={item.type}\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    className={classes.textField}\r\n                    onChange={(event) => saveData(event)}\r\n                  />\r\n                )\r\n              })}\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                className={classes.itemBtn}\r\n                onClick={handleSubmit}\r\n              >\r\n                Add NEW PRODUCT\r\n              </Button>\r\n            </form>\r\n          </DialogContent>\r\n        </Grid>\r\n        <Grid item md={6} className={classes.popUpRight}>\r\n          <Box className={classes.itemBox}>\r\n            <img src={logo} alt=\"\" className={classes.logo} />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default AddProduct\r\n","D:\\projects\\dashboard\\src\\components\\products\\productsSearch\\popUP\\style.js",[],"D:\\projects\\dashboard\\src\\components\\products\\productsSearch\\popUP\\const.js",[],"D:\\projects\\dashboard\\src\\components\\signUp\\index.jsx",["210","211","212","213"],"import React, { useRef, useState } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { useAuth } from '../../context/authContext'\r\nimport {\r\n  Button,\r\n  Typography,\r\n  TextField,\r\n  Grid,\r\n  Checkbox,\r\n  Box,\r\n  Avatar,\r\n} from '@material-ui/core'\r\nimport { Alert, AlertTitle } from '@material-ui/lab'\r\nimport { inputs } from './const'\r\nimport signUp from '../../assets/signUp/signUp.png'\r\nimport avatar from '../../assets/signUp/girl.svg'\r\n\r\nconst SignUp = () => {\r\n  const { signup, currentUser } = useAuth()\r\n  const [error, setError] = useState('')\r\n  const [user, setUser] = useState({\r\n    name: '',\r\n    lastName: '',\r\n    photo: ''\r\n  })\r\n  const [registration, setRegistration] = useState({\r\n    email: '',\r\n    password: '',\r\n    passwordConfirm: '',\r\n  })\r\n  const [loading, setLoading] = useState(false)\r\n  const history = useHistory()\r\n\r\n  const saveUser = (event) =>{\r\n    setUser({\r\n      name: event.target.form[0].value,\r\n      lastName: event.target.form[2].value,\r\n      photo: '',\r\n    })\r\n  }\r\n  const saveRegistrationData = (event) => {\r\n    setRegistration({\r\n      email: event.target.form[4].value,\r\n      password: event.target.form[6].value,\r\n      passwordConfirm: event.target.form[8].value,\r\n    })\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    if (registration.password !== registration.passwordConfirm) {\r\n      return setError('Passwords do not match')\r\n    }\r\n    try {\r\n      setError('')\r\n      setLoading(true)\r\n      await signup(registration.email, registration.password)\r\n      history.push('/users')\r\n    } catch {\r\n      setError('Failed to create an account')\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {error && (\r\n        <Alert severity=\"error\">\r\n          <AlertTitle>{error}</AlertTitle>\r\n        </Alert>\r\n      )}\r\n      <Grid container style={{justifyContent: 'center',\r\n      }}>\r\n        <Grid item xs={6} style={{ padding: '55px 64px 0' }}>\r\n          <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n            <Link\r\n              to=\"login\"\r\n              style={{\r\n                fontWeight: 'normal',\r\n                fontSize: 14,\r\n                lineHeight: 1.6,\r\n                textAlign: 'right',\r\n                letterSpacing: -0.05,\r\n                color: '#9EA0A5',\r\n              }}\r\n            >\r\n              Don't have an account?\r\n              <Typography\r\n                component=\"span\"\r\n                style={{ textDecoration: 'underline' }}\r\n              >\r\n                {' '}\r\n                Sign Up\r\n              </Typography>\r\n            </Link>\r\n          </div>\r\n          <div>\r\n            <Typography\r\n              variant=\"h2\"\r\n              style={{\r\n                fontWeight: 500,\r\n                fontSize: 24,\r\n                lineHeight: 1.16,\r\n                letterSpacing: -0.06,\r\n                color: '#212529',\r\n              }}\r\n            >\r\n              Sign up to Brainalityca\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h6\"\r\n              style={{\r\n                margin: '4px 0 40px',\r\n                fontWeight: 'normal',\r\n                fontSize: 14,\r\n                lineHeight: 1.4,\r\n                letterSpacing: -0.05,\r\n                color: '#9EA0A5',\r\n              }}\r\n            >\r\n              Sign up on the internal platform\r\n            </Typography>\r\n          </div>\r\n          <form onSubmit={handleSubmit}>\r\n            {inputs.map((input) => {\r\n              return (\r\n                <TextField\r\n                  key={input.id}\r\n                  margin=\"dense\"\r\n                  id={input.id}\r\n                  label={input.label}\r\n                  type={input.type}\r\n                  name={input.name}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  required\r\n                  onChange={(event) => saveRegistrationData(event)}\r\n                  style={{ marginTop: 0, marginBottom: 18 }}\r\n                />\r\n              )\r\n            })}\r\n            <label\r\n              style={{\r\n                fontWeight: 'normal',\r\n                fontSize: 14,\r\n                lineHeight: 1.4,\r\n                letterSpacing: -0.05,\r\n                color: '#9EA0A5',\r\n                display: 'flex',\r\n                \r\n              }}\r\n            >\r\n              <Checkbox\r\n                color=\"primary\"\r\n                inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                style={{ padding: 0 }}\r\n                required\r\n              />\r\n              <Typography component=\"p\">\r\n                I have read the\r\n                <Typography\r\n                  component=\"span\"\r\n                  style={{ color: 'black', textDecoration: 'underline' }}\r\n                >\r\n                  Terms and Conditions.\r\n                </Typography>\r\n              </Typography>\r\n            </label>\r\n            <Button\r\n              type=\"submit\"\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              style={{ width: '100%', marginTop: 24 }}\r\n              disabled={loading}\r\n            >\r\n              SIGN UP NOW\r\n            </Button>\r\n          </form>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          style={{\r\n            background: `url(${signUp}) no-repeat left`,\r\n            maxWidth: '29%',\r\n            height: '640px',\r\n            display: 'flex',\r\n            alignItems: 'flex-end',\r\n          }}\r\n        >\r\n          <Box\r\n            // className={classes.itemBox}\r\n            style={{ padding: '0 18px 24px 24px' }}\r\n          >\r\n            <Typography\r\n              variant=\"h4\"\r\n              style={{\r\n                fontWeight: 'normal',\r\n                fontSize: 16,\r\n                lineHeight: 1.5,\r\n                letterSpacing: -0.0571429,\r\n                color: '#FFFFFF',\r\n              }}\r\n            >\r\n              Hella narwhal Cosby sweater McSweeney's, salvia kitsch before they\r\n              sold out High Life.\r\n            </Typography>\r\n            <Box style={{ display: 'flex', marginTop: 18 }}>\r\n              <Avatar alt=\"Remy Sharp\" src={avatar}></Avatar>\r\n              <Box\r\n                style={{\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  justifyContent: 'center',\r\n                  marginLeft: 12,\r\n                }}\r\n              >\r\n                <Typography\r\n                  component=\"span\"\r\n                  style={{\r\n                    fontWeight: 'normal',\r\n                    fontSize: 14,\r\n                    lineHeight: 1.14,\r\n                    letterSpacing: -0.05,\r\n                    color: '#FFFFFF',\r\n                    marginBottom: 2,\r\n                  }}\r\n                >\r\n                  Takamaru Ayako\r\n                </Typography>\r\n                <Typography\r\n                  component=\"span\"\r\n                  style={{\r\n                    fontWeight: 'normal',\r\n                    fontSize: 14,\r\n                    lineHeight: 1.14,\r\n                    letterSpacing: -0.0428571,\r\n                    color: '#FFFFFF',\r\n                  }}\r\n                >\r\n                  Manager an inVision\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SignUp\r\n","D:\\projects\\dashboard\\src\\components\\signUp\\const.js",[],"D:\\projects\\dashboard\\src\\firebase.js",[],"D:\\projects\\dashboard\\src\\context\\authContext.js",[],"D:\\projects\\dashboard\\src\\components\\PrivateRoute.js",[],"D:\\projects\\dashboard\\src\\components\\login\\index.jsx",["214","215"],"import React, { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport {\r\n  Button,\r\n  Typography,\r\n  TextField,\r\n  Grid,\r\n  Checkbox,\r\n  Box,\r\n  Avatar,\r\n} from '@material-ui/core'\r\nimport { inputs } from './const'\r\nimport signUp from '../../assets/signUp/signUp.png'\r\nimport avatar from '../../assets/signUp/girl.svg'\r\nimport { useAuth } from '../../context/authContext'\r\nimport { Alert, AlertTitle } from '@material-ui/lab'\r\n\r\nconst Login = () => {\r\n  const { login } = useAuth()\r\n  const [error, setError] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const history = useHistory()\r\n\r\n  const [registration, setRegistration] = useState({\r\n    email: '',\r\n    password: '',\r\n  })\r\n\r\n  const saveRegistrationData = (event) => {\r\n    setRegistration({\r\n      email: event.target.form[0].value,\r\n      password: event.target.form[2].value,\r\n    })\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    try {\r\n      setError('')\r\n      setLoading(true)\r\n      await login(registration.email, registration.password)\r\n      history.push('/users')\r\n    } catch {\r\n      setError('Failed to sign in')\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n  return (\r\n    <>\r\n      {error && (\r\n        <Alert severity=\"error\">\r\n          <AlertTitle>{error}</AlertTitle>\r\n        </Alert>\r\n      )}\r\n      <Grid container style={{justifyContent: 'center',\r\n      }}>\r\n        <Grid item xs={6} style={{ padding: '55px 64px 0' }}>\r\n          <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n            <Link\r\n              to=\"signUp\"\r\n              style={{\r\n                fontWeight: 'normal',\r\n                fontSize: 14,\r\n                lineHeight: 1.6,\r\n                textAlign: 'right',\r\n                letterSpacing: -0.05,\r\n                color: '#9EA0A5',\r\n              }}\r\n            >\r\n              Have an account?\r\n              <Typography\r\n                variant=\"span\"\r\n                style={{ textDecoration: 'underline' }}\r\n              >\r\n                {' '}\r\n                Log in\r\n              </Typography>\r\n            </Link>\r\n          </div>\r\n          <div>\r\n            <Typography\r\n              variant=\"h2\"\r\n              style={{\r\n                fontWeight: 500,\r\n                fontSize: 24,\r\n                lineHeight: 1.16,\r\n                letterSpacing: -0.06,\r\n                color: '#212529',\r\n              }}\r\n            >\r\n              Log in to Brainalityca\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h6\"\r\n              style={{\r\n                margin: '4px 0 40px',\r\n                fontWeight: 'normal',\r\n                fontSize: 14,\r\n                lineHeight: 1.4,\r\n                letterSpacing: -0.05,\r\n                color: '#9EA0A5',\r\n              }}\r\n            >\r\n              Log in on the internal platform\r\n            </Typography>\r\n          </div>\r\n          <form onSubmit={handleSubmit}>\r\n            {inputs.map((input) => {\r\n              return (\r\n                <TextField\r\n                  key={input.id}\r\n                  margin=\"dense\"\r\n                  id={input.id}\r\n                  label={input.label}\r\n                  type={input.type}\r\n                  name={input.name}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  style={{ marginTop: 0, marginBottom: 18 }}\r\n                  onChange={(event) => saveRegistrationData(event)}\r\n                />\r\n              )\r\n            })}\r\n            <Button\r\n              type=\"submit\"\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              style={{ width: '100%', marginTop: 24 }}\r\n            >\r\n              SIGN UP NOW\r\n            </Button>\r\n          </form>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          style={{\r\n            background: `url(${signUp}) no-repeat left`,\r\n            maxWidth: '29%',\r\n            height: '640px',\r\n            display: 'flex',\r\n            alignItems: 'flex-end',\r\n          }}\r\n        >\r\n          <Box\r\n            // className={classes.itemBox}\r\n            style={{ padding: '0 18px 24px 24px' }}\r\n          >\r\n            <Typography\r\n              variant=\"h4\"\r\n              style={{\r\n                fontWeight: 'normal',\r\n                fontSize: 16,\r\n                lineHeight: 1.5,\r\n                letterSpacing: -0.0571429,\r\n                color: '#FFFFFF',\r\n              }}\r\n            >\r\n              Hella narwhal Cosby sweater McSweeney's, salvia kitsch before they\r\n              sold out High Life.\r\n            </Typography>\r\n            <Box style={{ display: 'flex', marginTop: 18 }}>\r\n              <Avatar alt=\"Remy Sharp\" src={avatar}></Avatar>\r\n              <Box\r\n                style={{\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  justifyContent: 'center',\r\n                  marginLeft: 12,\r\n                }}\r\n              >\r\n                <Typography\r\n                  variant=\"span\"\r\n                  style={{\r\n                    fontWeight: 'normal',\r\n                    fontSize: 14,\r\n                    lineHeight: 1.14,\r\n                    letterSpacing: -0.05,\r\n                    color: '#FFFFFF',\r\n                    marginBottom: 2,\r\n                  }}\r\n                >\r\n                  Takamaru Ayako\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"span\"\r\n                  style={{\r\n                    fontWeight: 'normal',\r\n                    fontSize: 14,\r\n                    lineHeight: 1.14,\r\n                    letterSpacing: -0.0428571,\r\n\r\n                    color: '#FFFFFF',\r\n                  }}\r\n                >\r\n                  Manager an inVision\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","D:\\projects\\dashboard\\src\\components\\login\\const.js",[],"D:\\projects\\dashboard\\src\\redux\\reducers\\notification.js",[],"D:\\projects\\dashboard\\src\\redux\\actions\\notification.js",[],"D:\\projects\\dashboard\\src\\components\\header\\notificationPopUp\\index.jsx",["216","217","218","219","220","221","222","223"],{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","severity":1,"message":"229","line":12,"column":3,"nodeType":"230","messageId":"231","endLine":12,"endColumn":7},{"ruleId":"228","severity":1,"message":"232","line":10,"column":3,"nodeType":"230","messageId":"231","endLine":10,"endColumn":13},{"ruleId":"233","severity":1,"message":"234","line":52,"column":6,"nodeType":"235","endLine":52,"endColumn":8,"suggestions":"236"},{"ruleId":"237","severity":1,"message":"238","line":64,"column":48,"nodeType":"239","messageId":"240","endLine":64,"endColumn":50},{"ruleId":"241","severity":1,"message":"242","line":93,"column":7,"nodeType":"243","endLine":93,"endColumn":42},{"ruleId":"233","severity":1,"message":"234","line":64,"column":6,"nodeType":"235","endLine":64,"endColumn":8,"suggestions":"244"},{"ruleId":"237","severity":1,"message":"238","line":81,"column":28,"nodeType":"239","messageId":"240","endLine":81,"endColumn":30},{"ruleId":"245","severity":1,"message":"246","line":8,"column":3,"nodeType":"247","messageId":"248","endLine":20,"endColumn":4},{"ruleId":"245","severity":1,"message":"246","line":10,"column":3,"nodeType":"247","messageId":"248","endLine":26,"endColumn":4},{"ruleId":"228","severity":1,"message":"249","line":13,"column":19,"nodeType":"230","messageId":"231","endLine":13,"endColumn":30},{"ruleId":"228","severity":1,"message":"250","line":56,"column":11,"nodeType":"230","messageId":"231","endLine":56,"endColumn":14},{"ruleId":"228","severity":1,"message":"251","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":23},{"ruleId":"228","severity":1,"message":"252","line":19,"column":19,"nodeType":"230","messageId":"231","endLine":19,"endColumn":30},{"ruleId":"228","severity":1,"message":"253","line":21,"column":10,"nodeType":"230","messageId":"231","endLine":21,"endColumn":14},{"ruleId":"228","severity":1,"message":"254","line":34,"column":9,"nodeType":"230","messageId":"231","endLine":34,"endColumn":17},{"ruleId":"228","severity":1,"message":"255","line":8,"column":3,"nodeType":"230","messageId":"231","endLine":8,"endColumn":11},{"ruleId":"228","severity":1,"message":"256","line":21,"column":10,"nodeType":"230","messageId":"231","endLine":21,"endColumn":17},{"ruleId":"228","severity":1,"message":"257","line":4,"column":3,"nodeType":"230","messageId":"231","endLine":4,"endColumn":14},{"ruleId":"228","severity":1,"message":"258","line":5,"column":3,"nodeType":"230","messageId":"231","endLine":5,"endColumn":16},{"ruleId":"228","severity":1,"message":"259","line":6,"column":3,"nodeType":"230","messageId":"231","endLine":6,"endColumn":9},{"ruleId":"228","severity":1,"message":"229","line":8,"column":3,"nodeType":"230","messageId":"231","endLine":8,"endColumn":7},{"ruleId":"228","severity":1,"message":"260","line":9,"column":3,"nodeType":"230","messageId":"231","endLine":9,"endColumn":20},{"ruleId":"228","severity":1,"message":"261","line":10,"column":3,"nodeType":"230","messageId":"231","endLine":10,"endColumn":12},{"ruleId":"228","severity":1,"message":"262","line":11,"column":3,"nodeType":"230","messageId":"231","endLine":11,"endColumn":6},{"ruleId":"228","severity":1,"message":"263","line":16,"column":10,"nodeType":"230","messageId":"231","endLine":16,"endColumn":22},"no-native-reassign",["264"],"no-negated-in-lhs",["265"],"no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","'hideLoader' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'fetch'. Either include it or remove the dependency array.","ArrayExpression",["266"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/aria-props","aria-labelledBy: This attribute is an invalid ARIA attribute. Did you mean to use aria-labelledby?","JSXAttribute",["267"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'setProducts' is defined but never used.","'GMT' is assigned a value but never used.","'useRef' is defined but never used.","'currentUser' is assigned a value but never used.","'user' is assigned a value but never used.","'saveUser' is assigned a value but never used.","'Checkbox' is defined but never used.","'loading' is assigned a value but never used.","'DialogTitle' is defined but never used.","'DialogActions' is defined but never used.","'Button' is defined but never used.","'DialogContentText' is defined but never used.","'TextField' is defined but never used.","'Box' is defined but never used.","'TrainRounded' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"268","fix":"269"},{"desc":"268","fix":"270"},"Update the dependencies array to be: [fetch]",{"range":"271","text":"272"},{"range":"273","text":"272"},[1282,1284],"[fetch]",[1686,1688]]